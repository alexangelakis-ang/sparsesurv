% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Garma_nb.R
\name{GARMA_NB}
\alias{GARMA_NB}
\title{Fit Negative Binomial GARMA Model with Prediction}
\usage{
GARMA_NB(
  cases,
  pop = NULL,
  covariates,
  p = 2,
  q = 2,
  c = 1,
  beta_init = NULL,
  r_init = NULL,
  beta_prior_mean = 0,
  beta_prior_sd = 10,
  r_prior_shape = 1,
  r_prior_rate = 1,
  n_iter = 1e+05,
  n_burnin = 10000,
  n_chains = 3,
  n_thin = 1,
  save_params = c("r", "beta", "phi", "theta"),
  covariatespred = NULL,
  poppred = NULL,
  casespred = NULL
)
}
\arguments{
\item{cases}{Vector of observed counts (length N)}

\item{pop}{Optional vector of population offsets (length N)}

\item{covariates}{Optional numeric matrix (N x P) of covariates for the count component.}

\item{p}{Integer, autoregressive order}

\item{q}{Integer, moving average order}

\item{c}{Constant added before log (default 1)}

\item{beta_init}{Optional list of length n_chains for beta, count coefficients initial values.}

\item{r_init}{Optional numeric vector of length n_chains for dispersion parameter.}

\item{beta_prior_mean}{Mean for beta prior (default: 0)}

\item{beta_prior_sd}{SD   for beta prior (default: 10)}

\item{r_prior_shape}{Shape for r ~ dgamma (default: 1)}

\item{r_prior_rate}{Rate  for r ~ dgamma (default: 1)}

\item{n_iter}{Total MCMC iterations (default: 100000)}

\item{n_burnin}{Burn-in iterations (default: 10000)}

\item{n_chains}{Number of chains (default: 3)}

\item{n_thin}{Thinning interval (default: 1)}

\item{save_params}{Character vector of parameters to save (default c("beta","delta","r"))}

\item{covariatespred}{Optional numeric matrix (M x P) of new covariates for count prediction.}

\item{poppred}{Optional vector of population offsets (length M) for prediction.}

\item{casespred}{Optional vector of true counts (length M) for prediction performance.}
}
\value{
A list with MCMC summary, samples, DIC, and if prediction data provided:
pred_matrix, pred_mean, mae, rmse
}
\description{
This function fits a generalized autoregressive moving average (GARMA-NB)
model for count data using a negative binomial distribution, and optionally
generates posterior predictive counts for future covariate inputs.
}
